{"version":3,"sources":["components/Navbarlinks.js","components/Navbar.js","store/actions/authActions.js","views/LoginPage.js","views/SignupPage.js","components/Comments.js","components/ArticlePostSmall.js","store/actions/articleActions.js","components/GifPostSmall.js","store/actions/gifActions.js","views/FeedPage.js","store/actions/feedActions.js","components/Footer.js","views/Dashboard.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/feedReducer.js","store/reducers/gifReducer.js","store/reducers/articleReducer.js","store/reducers/index.js","index.js"],"names":["connect","dispatch","signOut","type","props","className","onClick","state","auth","links","token","SignedOutLinks","to","baseURL","LoginPage","email","password","handleSubmit","e","preventDefault","signIn","handleTextChange","setState","target","id","value","this","authError","onSubmit","placeholder","onChange","autoFocus","Component","creds","credentials","getState","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","json","res","status","data","sessionStorage","setItem","userId","catch","err","SignUp","gender","signUp","handleSelect","console","log","required","Comments","comment","commentState","handleCommentPost","postId","style","display","ArticlePostSmall","commentIsHidden","toggleCommentContainer","gifId","commentPost","articleState","title","article","authorName","articleSmall","length","split","join","icon","faComment","getItem","GifPostSmall","imageUrl","src","alt","FeedPage","getFeed","posts","map","post","key","authorId","feed","Footer","marginTop","marginBottom","activeClassName","faFolderMinus","size","faStickyNote","faImage","exact","path","component","App","basename","Dashboard","SignupPage","Boolean","window","location","hostname","match","user","initState","authReducer","action","message","removeItem","feedReducer","gifReducer","articleReducer","rootReducer","combineReducers","gif","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00aede3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className='nav-links float-md-right'>\r\n            {/* <li className='nav-item'><Link to='' className='nav-link'>About</Link></li> */}\r\n            {/* <li className='nav-item'><Link to='' className='nav-link'>Feed</Link></li> */}\r\n            <li className='nav-item nav-btn'><button onClick={() => {\r\n                props.signOut();\r\n            }} className='btn-sm'>Logout</button></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch({\r\n            type: 'SIGNOUT_SUCCESS'\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/navbar.css'\r\nimport SignedInLinks from './Navbarlinks';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n    const links = auth.token ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className='navbar'>\r\n            <div className='container'>\r\n                {/* <div className='hamburger'>\r\n                    <div className='line'></div>\r\n                    <div className='line'></div>\r\n                    <div className='line'></div>\r\n                </div> */}\r\n                <ul className='nav-links float-md-left'>\r\n                    <li className='nav-item nav-brand'><Link to='/' className='nav-link'>Teamwork</Link></li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n\r\nconst SignedOutLinks = () => {\r\n    return null;\r\n}","export const baseURL = 'http://localhost:5000/api/v1/';\r\n\r\nconst path = 'auth';\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL+path}/signin`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'LOGIN_FAILED', data: res });\r\n                        } else {\r\n                            sessionStorage.setItem('userId', res.data.userId)\r\n                            sessionStorage.setItem('userToken', res.data.token)\r\n                            dispatch({ type: 'LOGIN_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'LOGIN_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'LOGIN_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\nexport const signup = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL+path}/create-user`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'SIGNUP_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'SIGNUP_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'SIGNUP_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'SIGNUP_FAILED', data: err });\r\n            });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signIn } from '../store/actions/authActions';\r\nimport '../styles/inputs.css';\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        if (auth.token) { return <Redirect to='/' /> }\r\n\r\n        return (\r\n            <div className='container login-container'>\r\n                <div className='form'>\r\n                    <h4 className='text-center'>Login</h4>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <p>Email Address:</p>\r\n                            <input type='text' className='form-input' id='email' placeholder='john.doe@gmail.com' value={this.state.email} onChange={this.handleTextChange} autoFocus />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <p>Password:</p>\r\n                            <input type='password' className='form-input' id='password' value={this.state.password} onChange={this.handleTextChange} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <Link to='/signup'>Do not have an account?</Link>\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <button type='submit' className='btn btn-primary float-md-right'>Login</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.auth.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signup } from '../store/actions/authActions';\r\nimport '../styles/inputs.css';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        gender: 'Male',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    handleSelect = (e) => {\r\n        console.log(e.target.value)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n\r\n        if (auth.userId) { return <Redirect to='/' /> }\r\n\r\n        return (\r\n            <div className='container login-container signup-container'>\r\n                <div className='form'>\r\n                    <h4 className='text-center'>Create an account</h4>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>First name:</p>\r\n                                    <input type='text' className='form-input' id='firstname' placeholder='John' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Last name:</p>\r\n                                    <input type='text' className='form-input' id='lastname' placeholder='Doe' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Department:</p>\r\n                                    <input type='text' className='form-input' id='department' placeholder='Accounting' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Job role:</p>\r\n                                    <input type='text' className='form-input' id='jobrole' placeholder='Manager' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-8'>\r\n                                    <p>Address:</p>\r\n                                    <input type='text' className='form-input' id='address' placeholder='64th King Street Wisconsin' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-4 '>\r\n                                    <p>Gender:</p>\r\n                                    <select className='form-input' value={this.state.gender} id='gender' onChange={this.handleTextChange}>\r\n                                        <option value='Male'>Male</option>\r\n                                        <option value='Female'>Female</option>\r\n                                        <option value='Other'>Other</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <p>Email Address:</p>\r\n                            <input type='email' className='form-input' id='email' placeholder='john.doe@gmail.com' onChange={this.handleTextChange} required />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <p>Password:</p>\r\n                            <input type='password' className='form-input' id='password' onChange={this.handleTextChange} required />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <Link to='/login'>Already have an account?</Link>\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <button type='submit' className='btn btn-primary float-md-right'>Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.auth.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signup(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\n\r\nclass Comments extends Component {\r\n    state = {\r\n        comment: ''\r\n    }\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { commentState, handleCommentPost, postId } = this.props;\r\n        return (\r\n            <div>\r\n                <form style={{ display: commentState }} onSubmit={(e) => {\r\n                    e.preventDefault()\r\n                    handleCommentPost(postId, this.state.comment)\r\n                    this.setState({\r\n                        comment: '',\r\n                    });\r\n                }}>\r\n                    <textarea className='form-input' id='comment' value={this.state.comment} onChange={this.handleTextChange}></textarea>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-xs-12'>\r\n                            <button className='btn btn-primary float-right'>Comment</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport Comments from './Comments';\r\nimport { connect } from 'react-redux';\r\nimport { commentPost } from '../store/actions/articleActions';\r\n\r\nclass ArticlePostSmall extends Component {\r\n    state = {\r\n        commentIsHidden: false\r\n    }\r\n\r\n    toggleCommentContainer = () => {\r\n        this.setState({\r\n            commentIsHidden: !this.state.commentIsHidden\r\n        });\r\n    }\r\n    handleCommentPost = (gifId, comment) => {\r\n        this.props.commentPost(gifId, comment);\r\n    }\r\n\r\n    render() {\r\n        let commentState = 'none';\r\n        let articleState = 'none';\r\n        if (this.state.commentIsHidden) {\r\n            commentState = 'block'\r\n        }\r\n        const { id, title, article, authorName } = this.props;\r\n        let articleSmall = article\r\n        if (article.length > 320) {\r\n            articleState = 'block'\r\n            articleSmall = article.split('', 320).join('')\r\n        }\r\n        return (\r\n            <div className={`post post-small`}>\r\n                <Link to={`article/${id}`} className='post-title'><p className='bold large'>{title}</p></Link>\r\n                <div className='post-content'>\r\n                    <p>{articleSmall}</p>\r\n                    <Link to={`article/${id}`} style={{ display: articleState }} className='readmore-link'>...Read more</Link>\r\n                    <div className='post-tools'>\r\n                        <div className='row'>\r\n                            <div className='col-xs-6'>\r\n                                <p className='x-s post-author'>By {authorName}</p>\r\n                            </div>\r\n                            <div className='col-xs-6'>\r\n                                <FontAwesomeIcon className='float-right f-icon' icon={faComment} onClick={this.toggleCommentContainer} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Comments postId={id} commentState={commentState} handleCommentPost={this.handleCommentPost} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        commentPost: (gifId, comment) => dispatch(commentPost(gifId, comment))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ArticlePostSmall);","import { baseURL } from './authActions';\r\n\r\nconst path = 'articles';\r\n\r\nexport const commentPost = (id, comment) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}/${id}/comment`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ comment }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'COMMENT_ARTICLE_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'COMMENT_ARTICLE_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'COMMENT_ARTICLE_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'COMMENT_ARTICLE_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport Comments from './Comments';\r\nimport { connect } from 'react-redux';\r\nimport { commentPost } from '../store/actions/gifActions.js';\r\n\r\nclass GifPostSmall extends Component {\r\n    state = {\r\n        commentIsHidden: false\r\n    }\r\n\r\n    toggleCommentContainer = () => {\r\n        this.setState({\r\n            commentIsHidden: !this.state.commentIsHidden\r\n        });\r\n    }\r\n    handleCommentPost = (gifId, comment) => {\r\n        this.props.commentPost(gifId, comment);\r\n    }\r\n\r\n    render() {\r\n\r\n        let commentState = 'none';\r\n        if (this.state.commentIsHidden) {\r\n            commentState = 'block'\r\n        }\r\n        const { id, title, imageUrl, authorName } = this.props;\r\n        return (\r\n            <div className='post'>\r\n                <Link to={`article/${id}`} className='post-title'><p className='bold large'>{title}</p></Link>\r\n                <div className='post-content'>\r\n                    <div className='ima'>\r\n                        <img src={imageUrl} alt='title-img' className='post-img' />\r\n                    </div>\r\n                    <div className='post-tools'>\r\n                        <div className='row'>\r\n                            <div className='col-xs-6'>\r\n                                <p className='x-s post-author'>By {authorName}</p>\r\n                            </div>\r\n                            <div className='col-xs-6'>\r\n                                <FontAwesomeIcon className='float-right f-icon' icon={faComment} onClick={this.toggleCommentContainer} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Comments postId={id} commentState={commentState} handleCommentPost={this.handleCommentPost} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        commentPost: (gifId, comment) => dispatch(commentPost(gifId, comment))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(GifPostSmall);","import { baseURL } from './authActions';\r\n\r\nconst path = 'gifs';\r\n\r\nexport const commentPost = (id, comment) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}/${id}/comment`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ comment }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'COMMENT_GIF_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'COMMENT_GIF_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'COMMENT_GIF_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'COMMENT_GIF_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport ArticlePostSmall from '../components/ArticlePostSmall';\r\nimport GifPostSmall from '../components/GifPostSmall';\r\nimport { connect } from 'react-redux'\r\nimport { getFeed } from '../store/actions/feedActions'\r\nimport '../styles/feed.css'\r\n\r\nclass FeedPage extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        this.props.getFeed();\r\n    }\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n            <div className='feed-container'>\r\n                <h5>My Feed</h5>\r\n                <br></br>\r\n                {\r\n                    posts.map((post) => {\r\n                        if (!post.imageUrl) {\r\n                            return <ArticlePostSmall\r\n                                key={post.id}\r\n                                id={post.id}\r\n                                title={post.title}\r\n                                article={post.article}\r\n                                authorId={post.authorId} \r\n                                authorName = {post.authorName}/>\r\n                        } else {\r\n                            return <GifPostSmall\r\n                                key={post.id}\r\n                                id={post.id}\r\n                                title={post.title}\r\n                                imageUrl={post.imageUrl}\r\n                                authorId={post.authorId} \r\n                                authorName = {post.authorName}/>\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.feed.posts,\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getFeed: () => dispatch(getFeed())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedPage);","import { baseURL } from './authActions';\r\n\r\nconst path = 'feed';\r\n\r\nexport const getFeed = () => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'GET_FEED_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'GET_FEED_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'GET_FEED_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'GET_FEED_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/navbar.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <nav className='navbar'>\r\n            <div className='container'>\r\n                <ul className='nav-links float-md-left'>\r\n                    <li className='nav-item'><Link to='/' className='nav-link'>Teamwork</Link></li>\r\n                </ul>\r\n                <ul className='nav-links float-md-right'>\r\n                    <li className='nav-item'><p className='x-s'>2019  Oreoluwa Bimbo-Salami</p></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { NavLink, Redirect, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/dashboard.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStickyNote, faImage, faFolderMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport FeedPage from './FeedPage';\r\nimport Footer from '../components/Footer';\r\n\r\nconst Dashboard = (props) => {\r\n    const { auth } = props;\r\n    if (!auth.token) { return <Redirect to='/login' /> }\r\n\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div style={{ display: '', marginTop: '50px', marginBottom: '50px' }}>\r\n                    <div className='row dash-row'>\r\n                        <div className='col-xs-12 col-sm-1'>\r\n                        </div>\r\n                        <div className='col-xs-12 col-sm-10'>\r\n                            <div className='dashboard-tabbar'>\r\n                                <div className='nav'>\r\n                                    <ul className='nav-links'>\r\n                                        <li className='nav-item'>\r\n                                            <NavLink to='/' className='nav-link' activeClassName='activeRoute'>\r\n                                                <FontAwesomeIcon icon={faFolderMinus} size='2x' />\r\n                                                <span>My feed</span>\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className='nav-item'>\r\n                                            <NavLink to='' className='nav-link'>\r\n                                                <FontAwesomeIcon icon={faStickyNote} size='2x' />\r\n                                                <span>Post an article</span>\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className='nav-item'>\r\n                                            <NavLink to='' className='nav-link'>\r\n                                                <FontAwesomeIcon icon={faImage} size='2x' />\r\n                                                <span>Post a gif</span>\r\n                                            </NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className='dashboard-display'>\r\n                                <Switch>\r\n                                    <Route exact path='/' component={FeedPage} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-xs-12 col-sm-1'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport LoginPage from './views/LoginPage';\r\nimport SignupPage from './views/SignupPage';\r\nimport Dashboard from './views/Dashboard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"\">\r\n      <BrowserRouter basename='DevC_Capstone_Project_Frontend'>\r\n        <Navbar />\r\n        <div style={{ marginTop: '2rem' }}>\r\n          <Switch>\r\n            <Route exact path='/' component={Dashboard} />\r\n            <Route path='/login' component={LoginPage} />\r\n            <Route path='/signup' component={SignupPage} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const user = sessionStorage.getItem('userToken');\r\nlet auth = null;\r\nif (user) {\r\n    auth = {\r\n        userId: sessionStorage.getItem('userId'),\r\n        token: user\r\n    }\r\n} else {\r\n    auth = {\r\n        userId: null,\r\n        token: null\r\n    };\r\n}\r\nconst initState = {\r\n    authError: null,\r\n    auth,\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_FAILED':\r\n            return {\r\n                ...state,\r\n                authError: action.data.message\r\n            }\r\n\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                auth: action.data.data,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            sessionStorage.removeItem('userToken');\r\n            sessionStorage.removeItem('userId');\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                auth: {\r\n                    userId: null,\r\n                    token: null\r\n                },\r\n            }\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup succesful');\r\n            return {\r\n                ...state,\r\n                auth: action.data.data,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNUP_FAILED':\r\n            console.log('Signup unsuccessful');\r\n            return {\r\n                ...state,\r\n                authError: action.data.message\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    posts: []\r\n}\r\n\r\nconst feedReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_FEED_FAILED':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case 'GET_FEED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                posts: action.data.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default feedReducer;","const initState = {\r\n}\r\n\r\nconst gifReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'COMMENT_GIF_FAILED':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case 'COMMENT_GIF_SUCCESS':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default gifReducer;","const initState = {\r\n}\r\n\r\nconst articleReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'COMMENT_GIF_FAILED':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case 'COMMENT_GIF_SUCCESS':\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default articleReducer;","import authReducer from './authReducer'\r\nimport { combineReducers } from 'redux'\r\nimport feedReducer from './feedReducer';\r\nimport gifReducer from './gifReducer';\r\nimport articleReducer from './articleReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    feed: feedReducer,\r\n    gif: gifReducer,\r\n    article: articleReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import './styles/flexboxindex.min.css';\r\nimport './styles/flexboxgrid.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}