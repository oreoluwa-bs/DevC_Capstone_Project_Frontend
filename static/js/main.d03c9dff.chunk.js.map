{"version":3,"sources":["components/Navbarlinks.js","components/Navbar.js","store/actions/authActions.js","components/Notification.js","views/LoginPage.js","views/SignupPage.js","components/Footer.js","components/DashTabbar.js","components/Comments.js","store/actions/articleActions.js","components/post/ArticlePostSmall.js","store/actions/gifActions.js","components/post/GifPostSmall.js","views/FeedPage.js","store/actions/feedActions.js","components/post/ArticlePostDetail.js","components/post/GifDetailPost.js","views/Dashboard.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/feedReducer.js","store/reducers/gifReducer.js","store/reducers/articleReducer.js","store/reducers/index.js","index.js"],"names":["connect","dispatch","signOut","type","props","className","onClick","state","auth","links","token","SignedOutLinks","to","baseURL","Notification","style","visibility","isVisible","notification","status","message","LoginPage","email","password","handleSubmit","e","preventDefault","signIn","setState","setTimeout","handleTextChange","target","id","value","this","onSubmit","placeholder","onChange","autoFocus","Component","creds","credentials","getState","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","json","res","data","sessionStorage","setItem","userId","catch","err","SignUp","gender","signUp","authError","required","Footer","DashTabbar","exact","activeClassName","icon","faFolderMinus","size","faStickyNote","faImage","Comments","comment","commentState","handleCommentPost","postId","display","commentPost","getItem","ArticlePostSmall","commentIsHidden","toggleCommentContainer","gifId","articleState","title","article","authorName","articleSmall","length","split","join","faComment","GifPostSmall","imageUrl","src","alt","gif","FeedPage","getFeed","nextProps","nextState","posts","map","post","key","authorId","feed","ArticlePostDetail","getArticle","comments","faPencilAlt","faTrashAlt","ownProps","match","params","GifPostDetail","getGif","marginTop","marginBottom","path","component","GifDetailPost","App","basename","Dashboard","SignupPage","Boolean","window","location","hostname","user","initState","authReducer","action","removeItem","console","log","feedReducer","gifReducer","articleReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d03c9dff.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className='nav-links float-md-right'>\r\n            {/* <li className='nav-item'><Link to='' className='nav-link'>About</Link></li> */}\r\n            <li className='nav-item nav-btn'><button onClick={() => {\r\n                props.signOut();\r\n            }} className='btn-sm'>Logout</button></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch({\r\n            type: 'SIGNOUT_SUCCESS'\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/navbar.css'\r\nimport SignedInLinks from './Navbarlinks';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n    const links = auth.token ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className='navbar'>\r\n            <div className='container'>\r\n                <ul className='nav-links float-md-left'>\r\n                    <li className='nav-item nav-brand'><Link to='/dashboard/' className='nav-link'>Teamwork</Link></li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n\r\nconst SignedOutLinks = () => {\r\n    return null;\r\n}","export const baseURL = 'http://localhost:5000/api/v1/';\r\n\r\nconst path = 'auth';\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL+path}/signin`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'LOGIN_FAILED', data: res });\r\n                        } else {\r\n                            sessionStorage.setItem('userId', res.data.userId)\r\n                            sessionStorage.setItem('userToken', res.data.token)\r\n                            dispatch({ type: 'LOGIN_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'LOGIN_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'LOGIN_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\nexport const signup = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL+path}/create-user`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'SIGNUP_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'SIGNUP_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'SIGNUP_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'SIGNUP_FAILED', data: err });\r\n            });\r\n    }\r\n}","import React from 'react';\r\n\r\nconst Notification = (props) => {\r\n    return (\r\n        <div style={{ visibility: props.isVisible ? 'visible' : 'hidden' }} className={`notification notification-${props.notification.status}`}>\r\n            <p className='x-s'>{props.notification.message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signIn } from '../store/actions/authActions';\r\nimport '../styles/inputs.css';\r\nimport Notification from '../components/Notification';\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        isVisible: false,\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n        this.setState({\r\n            isVisible: !this.state.isVisible\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isVisible: !this.state.isVisible\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if (auth.token) { return <Redirect to='/dashboard/' /> }\r\n\r\n        return (\r\n            <div className='container login-container'>\r\n                <Notification isVisible={this.state.isVisible} notification={this.props.notification} />\r\n                <div className='form'>\r\n                    <h4 className='text-center'>Login</h4>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <p>Email Address:</p>\r\n                            <input type='text' className='form-input' id='email' placeholder='john.doe@gmail.com' value={this.state.email} onChange={this.handleTextChange} autoFocus />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <p>Password:</p>\r\n                            <input type='password' className='form-input' id='password' value={this.state.password} onChange={this.handleTextChange} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <Link to='/signup'>Do not have an account?</Link>\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <button type='submit' className='btn btn-primary float-md-right'>Login</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.auth.notification,\r\n        auth: state.auth.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signup } from '../store/actions/authActions';\r\nimport '../styles/inputs.css';\r\nimport Notification from '../components/Notification';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        gender: 'Male',\r\n        isVisible: false,\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n        this.setState({\r\n            isVisible: !this.state.isVisible\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isVisible: !this.state.isVisible\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n\r\n        if (auth.userId) { return <Redirect to='/dashboard/' /> }\r\n\r\n        return (\r\n            <div className='container login-container signup-container'>\r\n                <Notification isVisible={this.state.isVisible} notification={this.props.notification} />\r\n                <div className='form'>\r\n                    <h4 className='text-center'>Create an account</h4>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>First name:</p>\r\n                                    <input type='text' className='form-input' id='firstname' placeholder='John' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Last name:</p>\r\n                                    <input type='text' className='form-input' id='lastname' placeholder='Doe' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Department:</p>\r\n                                    <input type='text' className='form-input' id='department' placeholder='Accounting' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Job role:</p>\r\n                                    <input type='text' className='form-input' id='jobrole' placeholder='Manager' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-8'>\r\n                                    <p>Address:</p>\r\n                                    <input type='text' className='form-input' id='address' placeholder='64th King Street Wisconsin' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-4 '>\r\n                                    <p>Gender:</p>\r\n                                    <select className='form-input' value={this.state.gender} id='gender' onChange={this.handleTextChange}>\r\n                                        <option value='Male'>Male</option>\r\n                                        <option value='Female'>Female</option>\r\n                                        <option value='Other'>Other</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <p>Email Address:</p>\r\n                            <input type='email' className='form-input' id='email' placeholder='john.doe@gmail.com' onChange={this.handleTextChange} required />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <p>Password:</p>\r\n                            <input type='password' className='form-input' id='password' onChange={this.handleTextChange} required />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <Link to='/login'>Already have an account?</Link>\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <button type='submit' className='btn btn-primary float-md-right'>Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.auth.notification,\r\n        auth: state.auth.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signup(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/navbar.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <nav className='navbar'>\r\n            <div className='container'>\r\n                <ul className='nav-links float-md-left'>\r\n                    <li className='nav-item'><Link to='/' className='nav-link'>Teamwork</Link></li>\r\n                </ul>\r\n                <ul className='nav-links float-md-right'>\r\n                    <li className='nav-item'><p className='x-s'>2019  Oreoluwa Bimbo-Salami</p></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStickyNote, faImage, faFolderMinus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst DashTabbar = () => {\r\n    return (\r\n        <div className='dashboard-tabbar'>\r\n            <div className='nav'>\r\n                <ul className='nav-links'>\r\n                    <li className='nav-item'>\r\n                        <NavLink exact to='/dashboard/' className='nav-link' activeClassName='activeRoute'>\r\n                            <FontAwesomeIcon icon={faFolderMinus} size='2x' />\r\n                            <span>My feed</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <NavLink to='/dashboard/post-article' className='nav-link' activeClassName='activeRoute'>\r\n                            <FontAwesomeIcon icon={faStickyNote} size='2x' />\r\n                            <span>Post an article</span>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className='nav-item'>\r\n                        <NavLink to='/dashboard/post-gif' className='nav-link' activeClassName='activeRoute'>\r\n                            <FontAwesomeIcon icon={faImage} size='2x' />\r\n                            <span>Post a gif</span>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashTabbar;","import React, { Component } from 'react';\r\n\r\nclass Comments extends Component {\r\n    state = {\r\n        comment: ''\r\n    }\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { commentState, handleCommentPost, postId } = this.props;\r\n        return (\r\n            <div>\r\n                <form style={{ display: commentState }} onSubmit={(e) => {\r\n                    e.preventDefault()\r\n                    handleCommentPost(postId, this.state.comment)\r\n                    this.setState({\r\n                        comment: '',\r\n                    });\r\n                }}>\r\n                    <textarea className='form-input' id='comment' value={this.state.comment} onChange={this.handleTextChange}></textarea>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-xs-12'>\r\n                            <button className='btn btn-primary float-right'>Comment</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;","import { baseURL } from './authActions';\r\n\r\nconst path = 'articles';\r\n\r\nexport const commentPost = (id, comment) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}/${id}/comment`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ comment }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'COMMENT_ARTICLE_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'COMMENT_ARTICLE_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'COMMENT_ARTICLE_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'COMMENT_ARTICLE_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const getArticle = (id) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}/${id}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'GET_ARTICLE_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'GET_ARTICLE_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'GET_ARTICLE_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'GET_ARTICLE_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport Comments from '../Comments';\r\nimport { connect } from 'react-redux';\r\nimport { commentPost } from '../../store/actions/articleActions';\r\nimport Notification from '../Notification';\r\n\r\nclass ArticlePostSmall extends Component {\r\n    state = {\r\n        commentIsHidden: false,\r\n        isVisible: false,\r\n    }\r\n\r\n    toggleCommentContainer = () => {\r\n        this.setState({\r\n            commentIsHidden: !this.state.commentIsHidden\r\n        });\r\n    }\r\n    handleCommentPost = (gifId, comment) => {\r\n        this.props.commentPost(gifId, comment);\r\n        this.setState({\r\n            isVisible: !this.state.isVisible\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isVisible: !this.state.isVisible\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        let commentState = 'none';\r\n        let articleState = 'none';\r\n        if (this.state.commentIsHidden) {\r\n            commentState = 'block'\r\n        }\r\n        const { id, title, article, authorName } = this.props;\r\n        let articleSmall = article\r\n        if (article.length > 320) {\r\n            articleState = 'block'\r\n            articleSmall = article.split('', 320).join('')\r\n        }\r\n        return (\r\n            <div className={`post post-small`}>\r\n                <Link to={`/dashboard/article/${id}`} className='post-title'><p className='bold large'>{title}</p></Link>\r\n                <div className='post-content'>\r\n                    <p>{articleSmall}</p>\r\n                    <Link to={`/dashboard/article/${id}`} style={{ display: articleState }} className='readmore-link'>...Read more</Link>\r\n                    <div className='post-tools'>\r\n                        <div className='row'>\r\n                            <div className='col-xs-6'>\r\n                                <p className='x-s post-author'>By {authorName}</p>\r\n                            </div>\r\n                            <div className='col-xs-6'>\r\n                                <FontAwesomeIcon className='float-right f-icon' icon={faComment} onClick={this.toggleCommentContainer} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Comments postId={id} commentState={commentState} handleCommentPost={this.handleCommentPost} />\r\n                    <Notification isVisible={this.state.isVisible} notification={this.props.notification} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.article.notification,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        commentPost: (gifId, comment) => dispatch(commentPost(gifId, comment))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePostSmall);","import { baseURL } from './authActions';\r\n\r\nconst path = 'gifs';\r\n\r\nexport const commentPost = (id, comment) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}/${id}/comment`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ comment }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'COMMENT_GIF_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'COMMENT_GIF_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'COMMENT_GIF_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'COMMENT_GIF_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\nexport const getGif = (id) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}/${id}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'GET_GIF_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'GET_GIF_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'GET_GIF_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'GET_GIF_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\r\nimport Comments from '../Comments';\r\nimport { connect } from 'react-redux';\r\nimport { commentPost } from '../../store/actions/gifActions.js';\r\nimport Notification from '../Notification';\r\n\r\nclass GifPostSmall extends Component {\r\n    state = {\r\n        commentIsHidden: false,\r\n        isVisible: false,\r\n    }\r\n\r\n    toggleCommentContainer = () => {\r\n        this.setState({\r\n            commentIsHidden: !this.state.commentIsHidden\r\n        });\r\n    }\r\n    handleCommentPost = (gifId, comment) => {\r\n        this.props.commentPost(gifId, comment);\r\n        this.setState({\r\n            isVisible: !this.state.isVisible\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isVisible: !this.state.isVisible\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n\r\n        let commentState = 'none';\r\n        if (this.state.commentIsHidden) {\r\n            commentState = 'block'\r\n        }\r\n        const { id, title, imageUrl, authorName } = this.props;\r\n        return (\r\n            <div className='post'>\r\n                <Link to={`/dashboard/gif/${id}`} className='post-title'><p className='bold large'>{title}</p></Link>\r\n                <div className='post-content'>\r\n                    <div className='ima'>\r\n                        <img src={imageUrl} alt='title-img' className='post-img' />\r\n                    </div>\r\n                    <div className='post-tools'>\r\n                        <div className='row'>\r\n                            <div className='col-xs-6'>\r\n                                <p className='x-s post-author'>By {authorName}</p>\r\n                            </div>\r\n                            <div className='col-xs-6'>\r\n                                <FontAwesomeIcon className='float-right f-icon' icon={faComment} onClick={this.toggleCommentContainer} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Comments postId={id} commentState={commentState} handleCommentPost={this.handleCommentPost} />\r\n                    <Notification isVisible={this.state.isVisible} notification={this.props.notification} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notification: state.gif.notification,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        commentPost: (gifId, comment) => dispatch(commentPost(gifId, comment))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GifPostSmall);","import React, { Component } from 'react';\r\nimport ArticlePostSmall from '../components/post/ArticlePostSmall';\r\nimport GifPostSmall from '../components/post/GifPostSmall';\r\nimport { connect } from 'react-redux'\r\nimport { getFeed } from '../store/actions/feedActions'\r\nimport '../styles/feed.css'\r\n\r\nclass FeedPage extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        this.props.getFeed();\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        this.props.getFeed();\r\n        return true\r\n    }\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n            <div className='feed-container'>\r\n                <h5>My Feed</h5>\r\n                <br></br>\r\n                {\r\n                    posts.map((post) => {\r\n                        if (!post.imageUrl) {\r\n                            return <ArticlePostSmall\r\n                                key={post.id}\r\n                                id={post.id}\r\n                                title={post.title}\r\n                                article={post.article}\r\n                                authorId={post.authorId} \r\n                                authorName = {post.authorName}/>\r\n                        } else {\r\n                            return <GifPostSmall\r\n                                key={post.id}\r\n                                id={post.id}\r\n                                title={post.title}\r\n                                imageUrl={post.imageUrl}\r\n                                authorId={post.authorId} \r\n                                authorName = {post.authorName}/>\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.feed.posts,\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getFeed: () => dispatch(getFeed())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedPage);","import { baseURL } from './authActions';\r\n\r\nconst path = 'feed';\r\n\r\nexport const getFeed = () => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${baseURL + path}`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${sessionStorage.getItem('userToken')}`\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'GET_FEED_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'GET_FEED_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'GET_FEED_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'GET_FEED_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { commentPost, getArticle } from '../../store/actions/articleActions';\r\nimport Comments from '../Comments';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Notification from '../Notification';\r\n\r\nclass ArticlePostDetail extends Component {\r\n    state = {\r\n        isVisible: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getArticle(this.props.id)\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        this.props.getArticle(this.props.id)\r\n        return true\r\n    }\r\n\r\n    handleCommentPost = (gifId, comment) => {\r\n        this.props.commentPost(gifId, comment)\r\n        this.setState({\r\n            isVisible: !this.state.isVisible\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isVisible: !this.state.isVisible\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        const { id, title, article, authorName, comments, authorId } = this.props.post;\r\n        return (\r\n            <div className='feed-container'>\r\n                <Notification isVisible={this.state.isVisible} notification={this.props.notification} />\r\n                <div className={`post`}>\r\n                    <p className='bold large post-title'>{title}</p>\r\n                    <div className='post-content'>\r\n                        <p>{article}</p>\r\n                        <div className='post-tools'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-6'>\r\n                                    <p className='x-s post-author'>By {authorName}</p>\r\n                                </div>\r\n                                <div className='col-xs-6'>\r\n                                    {\r\n                                        // eslint-disable-next-line eqeqeq\r\n                                        this.props.auth.userId == authorId &&\r\n                                        <span>\r\n                                            <FontAwesomeIcon className='float-right f-icon' icon={faPencilAlt} />\r\n                                            <FontAwesomeIcon className='float-right f-icon' icon={faTrashAlt} />\r\n                                        </span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Comments postId={id} commentState={true} handleCommentPost={this.handleCommentPost} />\r\n                    </div>\r\n                    <p>Comments :</p>\r\n                    {\r\n                        comments.map((comment) => {\r\n                            return (\r\n                                <div className={`post`} key={comment.id}>\r\n                                    <div className='post-content'>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p className='x-s post-author'>By {comment.authorName}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth.auth,\r\n        id: ownProps.match.params.id,\r\n        post: state.article.post,\r\n        notification: state.gif.notification,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getArticle: (gifId) => dispatch(getArticle(gifId)),\r\n        commentPost: (gifId, comment) => dispatch(commentPost(gifId, comment))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePostDetail);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { commentPost, getGif } from '../../store/actions/gifActions';\r\nimport Comments from '../Comments';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport Notification from '../Notification';\r\n\r\nclass GifPostDetail extends Component {\r\n    state = {\r\n        isVisible: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getGif(this.props.id)\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        this.props.getGif(this.props.id)\r\n        return true\r\n    }\r\n\r\n    handleCommentPost = (gifId, comment) => {\r\n        this.props.commentPost(gifId, comment);\r\n        this.setState({\r\n            isVisible: !this.state.isVisible\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isVisible: !this.state.isVisible\r\n            })\r\n        }, 3000);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { id, title, imageUrl, authorName, comments, authorId } = this.props.post;\r\n        return (\r\n            <div className='feed-container'>\r\n                <div className={`post`}>\r\n                    <p className='bold large post-title'>{title}</p>\r\n                    <div className='post-content'>\r\n                        <div className='ima'>\r\n                            <img src={imageUrl} alt='title-img' className='post-img' />\r\n                        </div>\r\n                        <div className='post-tools'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-6'>\r\n                                    <p className='x-s post-author'>By {authorName}</p>\r\n                                </div>\r\n                                <div className='col-xs-6'>\r\n                                    {\r\n                                        // eslint-disable-next-line eqeqeq\r\n                                        this.props.auth.userId == authorId &&\r\n                                        <span>\r\n                                            <FontAwesomeIcon className='float-right f-icon' icon={faPencilAlt} />\r\n                                            <FontAwesomeIcon className='float-right f-icon' icon={faTrashAlt} />\r\n                                        </span>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Comments postId={id} commentState={true} handleCommentPost={this.handleCommentPost} />\r\n                        <Notification isVisible={this.state.isVisible} notification={this.props.notification} />\r\n                    </div>\r\n                    <p>Comments :</p>\r\n                    {\r\n                        comments.map((comment) => {\r\n                            return (\r\n                                <div className={`post`} key={comment.id}>\r\n                                    <div className='post-content'>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p className='x-s post-author'>By {comment.authorName}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth.auth,\r\n        id: ownProps.match.params.id,\r\n        post: state.gif.post,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getGif: (gifId) => dispatch(getGif(gifId)),\r\n        commentPost: (gifId, comment) => dispatch(commentPost(gifId, comment))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GifPostDetail);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Footer from '../components/Footer';\r\nimport DashTabbar from '../components/DashTabbar';\r\nimport FeedPage from './FeedPage';\r\nimport ArticlePostDetail from '../components/post/ArticlePostDetail';\r\nimport GifDetailPost from '../components/post/GifDetailPost';\r\n\r\nimport '../styles/dashboard.css';\r\n\r\nconst Dashboard = (props) => {\r\n    const { auth } = props;\r\n    if (!auth.token) { return <Redirect to='/login' /> }\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div style={{ display: '', marginTop: '50px', marginBottom: '50px' }}>\r\n                    <div className='row dash-row'>\r\n                        <div className='col-xs-12 col-sm-1'>\r\n                        </div>\r\n                        <div className='col-xs-12 col-sm-10'>\r\n                            <DashTabbar />\r\n                            <div className='dashboard-display'>\r\n                                <Route exact path='/dashboard/' component={FeedPage} />\r\n                                <Route path='/dashboard/article/:id' component={ArticlePostDetail} />\r\n                                <Route path='/dashboard/gif/:id' component={GifDetailPost} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-xs-12 col-sm-1'>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport LoginPage from './views/LoginPage';\r\nimport SignupPage from './views/SignupPage';\r\nimport Dashboard from './views/Dashboard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"\">\r\n      <BrowserRouter basename='DevC_Capstone_Project_Frontend'>\r\n        <Navbar />\r\n        <div style={{ marginTop: '2rem' }}>\r\n          <Switch>\r\n            <Route path='/dashboard' component={Dashboard} />\r\n            <Route path='/login' component={LoginPage} />\r\n            <Route path='/signup' component={SignupPage} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const user = sessionStorage.getItem('userToken');\r\nlet auth = null;\r\nif (user) {\r\n    auth = {\r\n        userId: sessionStorage.getItem('userId'),\r\n        token: user\r\n    }\r\n} else {\r\n    auth = {\r\n        userId: null,\r\n        token: null\r\n    };\r\n}\r\nconst initState = {\r\n    notification: {\r\n        status: null,\r\n        message: null,\r\n    },\r\n    authError: null,\r\n    auth,\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_FAILED':\r\n            return {\r\n                ...state,\r\n                authError: action.data.message,\r\n                notification: action.data\r\n            }\r\n\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                auth: action.data.data,\r\n                authError: null,\r\n                notification: action.data,\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            sessionStorage.removeItem('userToken');\r\n            sessionStorage.removeItem('userId');\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                auth: {\r\n                    userId: null,\r\n                    token: null\r\n                },\r\n            }\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup succesful');\r\n            return {\r\n                ...state,\r\n                auth: null,\r\n                authError: null,\r\n                notification: action.data\r\n            }\r\n\r\n        case 'SIGNUP_FAILED':\r\n            console.log('Signup unsuccessful');\r\n            return {\r\n                ...state,\r\n                authError: action.data.message,\r\n                notification: action.data\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    posts: []\r\n}\r\n\r\nconst feedReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_FEED_FAILED':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case 'GET_FEED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                posts: action.data.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default feedReducer;","const initState = {\r\n    notification: {\r\n        status: null,\r\n        message: null,\r\n    },\r\n    post: {\r\n        comments: [],\r\n    }\r\n}\r\n\r\nconst gifReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_GIF_FAILED':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case 'GET_GIF_SUCCESS':\r\n            return {\r\n                ...state,\r\n                post: action.data.data\r\n            }\r\n        case 'COMMENT_GIF_FAILED':\r\n            return {\r\n                ...state,\r\n                notification: {\r\n                    status: 'error',\r\n                    message: 'Comment on post failed'\r\n                },\r\n            }\r\n\r\n        case 'COMMENT_GIF_SUCCESS':\r\n            return {\r\n                ...state,\r\n                notification: {\r\n                    status: 'success',\r\n                    message: 'You have commented on this post'\r\n                },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default gifReducer;","const initState = {\r\n    notification: {\r\n        status: null,\r\n        message: null,\r\n    },\r\n    post: {\r\n        comments: [],\r\n    }\r\n}\r\n\r\nconst articleReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_ARTICLE_FAILED':\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case 'GET_ARTICLE_SUCCESS':\r\n            return {\r\n                ...state,\r\n                post: action.data.data\r\n            }\r\n        case 'COMMENT_ARTICLE_FAILED':\r\n            return {\r\n                ...state,\r\n                notification: {\r\n                    status: 'error',\r\n                    message: 'Comment on post failed'\r\n                },\r\n            }\r\n\r\n        case 'COMMENT_ARTICLE_SUCCESS':\r\n            return {\r\n                ...state,\r\n                notification: {\r\n                    status: 'success',\r\n                    message: 'You have commented on this post'\r\n                },\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default articleReducer;","import authReducer from './authReducer'\r\nimport { combineReducers } from 'redux'\r\nimport feedReducer from './feedReducer';\r\nimport gifReducer from './gifReducer';\r\nimport articleReducer from './articleReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    feed: feedReducer,\r\n    gif: gifReducer,\r\n    article: articleReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import './styles/flexboxindex.min.css';\r\nimport './styles/flexboxgrid.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}