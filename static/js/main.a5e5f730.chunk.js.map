{"version":3,"sources":["components/Navbarlinks.js","components/Navbar.js","store/actions/authActions.js","views/LoginPage.js","views/SignupPage.js","views/Dashboard.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/index.js","index.js"],"names":["connect","dispatch","signOut","type","props","className","onClick","state","auth","links","token","SignedOutLinks","to","url","LoginPage","email","password","handleSubmit","e","preventDefault","signIn","handleTextChange","setState","target","id","value","this","authError","console","log","onSubmit","placeholder","onChange","autoFocus","Component","creds","credentials","getState","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","json","res","status","data","localStorage","setItem","userId","catch","err","SignUp","gender","signUp","handleSelect","required","style","display","marginTop","activeClassName","icon","faFolderMinus","size","faStickyNote","faImage","App","exact","path","component","Dashboard","SignupPage","Boolean","window","location","hostname","match","user","getItem","initState","authReducer","action","message","removeItem","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5e5f730.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className='nav-links float-md-right'>\r\n            {/* <li className='nav-item'><Link to='' className='nav-link'>About</Link></li> */}\r\n            {/* <li className='nav-item'><Link to='' className='nav-link'>Feed</Link></li> */}\r\n            <li className='nav-item nav-btn'><button onClick={() => {\r\n                props.signOut();\r\n            }} className='btn-sm'>Logout</button></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch({\r\n            type: 'SIGNOUT_SUCCESS'\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/navbar.css'\r\nimport SignedInLinks from './Navbarlinks';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n    const links = auth.token ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className='navbar'>\r\n            <div className='container'>\r\n                {/* <div className='hamburger'>\r\n                    <div className='line'></div>\r\n                    <div className='line'></div>\r\n                    <div className='line'></div>\r\n                </div> */}\r\n                <ul className='nav-links float-md-left'>\r\n                    <li className='nav-item nav-brand'><Link to='/DevC_Capstone_Project_Frontend/' className='nav-link'>Teamwork</Link></li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.auth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n\r\nconst SignedOutLinks = () => {\r\n    return null;\r\n}","const url = 'http://localhost:5000/api/v1/auth';\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${url}/signin`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'LOGIN_FAILED', data: res });\r\n                        } else {\r\n                            localStorage.setItem('userId', res.data.userId)\r\n                            localStorage.setItem('userToken', res.data.token)\r\n                            dispatch({ type: 'LOGIN_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'LOGIN_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'LOGIN_FAILED', data: err });\r\n            });\r\n    }\r\n}\r\n\r\nexport const signup = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        const request = new Request(`${url}/create-user`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(credentials),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        });\r\n        fetch(request)\r\n            .then((response) => {\r\n                response.json()\r\n                    .then((res) => {\r\n                        if (res.status === 'error') {\r\n                            dispatch({ type: 'SIGNUP_FAILED', data: res });\r\n                        } else {\r\n                            dispatch({ type: 'SIGNUP_SUCCESS', data: res });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        dispatch({ type: 'SIGNUP_FAILED', data: err });\r\n                    });\r\n            }).catch((err) => {\r\n                dispatch({ type: 'SIGNUP_FAILED', data: err });\r\n            });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signIn } from '../store/actions/authActions';\r\nimport '../styles/inputs.css';\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        console.log(auth)\r\n\r\n        if (auth.token) { return <Redirect to='/DevC_Capstone_Project_Frontend/' /> }\r\n\r\n        return (\r\n            <div className='container login-container'>\r\n                <div className='form'>\r\n                    <h4 className='text-center'>Login</h4>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className='form-group'>\r\n                            <p>Email Address:</p>\r\n                            <input type='text' className='form-input' id='email' placeholder='john.doe@gmail.com' value={this.state.email} onChange={this.handleTextChange} autoFocus />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <p>Password:</p>\r\n                            <input type='password' className='form-input' id='password' value={this.state.password} onChange={this.handleTextChange} />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <Link to=''>Do not have an account?</Link>\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <button type='submit' className='btn btn-primary float-md-right'>Login</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.auth.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signup } from '../store/actions/authActions';\r\nimport '../styles/inputs.css';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        gender: 'Male',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    handleSelect = (e) => {\r\n        console.log(e.target.value)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n\r\n        if (auth.userId) { return <Redirect to='/DevC_Capstone_Project_Frontend/' /> }\r\n\r\n        return (\r\n            <div className='container login-container signup-container'>\r\n                <div className='form'>\r\n                    <h4 className='text-center'>Create an account</h4>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>First name:</p>\r\n                                    <input type='text' className='form-input' id='firstname' placeholder='John' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Last name:</p>\r\n                                    <input type='text' className='form-input' id='lastname' placeholder='Doe' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Department:</p>\r\n                                    <input type='text' className='form-input' id='department' placeholder='Accounting' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <p>Job role:</p>\r\n                                    <input type='text' className='form-input' id='jobrole' placeholder='Manager' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-8'>\r\n                                    <p>Address:</p>\r\n                                    <input type='text' className='form-input' id='address' placeholder='64th King Street Wisconsin' onChange={this.handleTextChange} required />\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-4 '>\r\n                                    <p>Gender:</p>\r\n                                    <select className='form-input' value={this.state.gender} id='gender' onChange={this.handleTextChange}>\r\n                                        <option value='Male'>Male</option>\r\n                                        <option value='Female'>Female</option>\r\n                                        <option value='Other'>Other</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <p>Email Address:</p>\r\n                            <input type='email' className='form-input' id='email' placeholder='john.doe@gmail.com' onChange={this.handleTextChange} required />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <p>Password:</p>\r\n                            <input type='password' className='form-input' id='password' onChange={this.handleTextChange} required />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <div className='row'>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <Link to='/login'>Already have an account?</Link>\r\n                                </div>\r\n                                <div className='col-xs-12 col-sm-6'>\r\n                                    <button type='submit' className='btn btn-primary float-md-right'>Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.auth.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signup(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/dashboard.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStickyNote, faImage, faFolderMinus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Dashboard = (props) => {\r\n    const { auth } = props\r\n    console.log(auth);\r\n\r\n    if (!auth.token) { return <Redirect to='/DevC_Capstone_Project_Frontend/login' /> }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div style={{ display: '', marginTop: '50px' }}>\r\n                <div className='row dash-row'>\r\n                    <div className='col-xs-12 col-sm-3 col-md-2 col-lg-2'>\r\n                    </div>\r\n                    <div className='col-xs-12 col-sm-6 col-md-8 col-lg-8'>\r\n                        <div className='dashboard-tabbar'>\r\n                            <div className='nav'>\r\n                                <ul className='nav-links'>\r\n                                    <li className='nav-item'>\r\n                                        <NavLink to='/' className='nav-link' activeClassName='activeRoute'>\r\n                                            <FontAwesomeIcon icon={faFolderMinus} size='2x' />\r\n                                            <span>My feed</span>\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className='nav-item'>\r\n                                        <NavLink to='' className='nav-link'>\r\n                                            <FontAwesomeIcon icon={faStickyNote} size='2x' />\r\n                                            <span>Post an article</span>\r\n                                        </NavLink>\r\n                                    </li>\r\n                                    <li className='nav-item'>\r\n                                        <NavLink to='' className='nav-link'>\r\n                                            <FontAwesomeIcon icon={faImage} size='2x' />\r\n                                            <span>Post a gif</span>\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className='dashboard-display'>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-xs-12 col-sm-3 col-md-2 col-lg-2'>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport LoginPage from './views/LoginPage';\r\nimport SignupPage from './views/SignupPage';\r\nimport Dashboard from './views/Dashboard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"\">\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <div style={{ marginTop: '2rem' }}>\r\n          <Switch>\r\n            <Route exact path='/DevC_Capstone_Project_Frontend/' component={Dashboard} />\r\n            <Route path='/DevC_Capstone_Project_Frontend/login' component={LoginPage} />\r\n            <Route path='/DevC_Capstone_Project_Frontend/signup' component={SignupPage} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const user = localStorage.getItem('userToken');\r\nlet auth = null;\r\nif (user) {\r\n    auth = {\r\n        userId: localStorage.getItem('userId'),\r\n        token: user\r\n    }\r\n} else {\r\n    auth = {\r\n        userId: null,\r\n        token: null\r\n    };\r\n}\r\nconst initState = {\r\n    authError: null,\r\n    auth,\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_FAILED':\r\n            return {\r\n                ...state,\r\n                authError: action.data.message\r\n            }\r\n\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                auth: action.data.data,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            localStorage.removeItem('userToken');\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n                auth: {\r\n                    userId: null,\r\n                    token: null\r\n                },\r\n            }\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup succesful');\r\n            return {\r\n                ...state,\r\n                auth: action.data.data,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNUP_FAILED':\r\n            console.log('Signup unsuccessful');\r\n            return {\r\n                ...state,\r\n                authError: action.data.message\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","import authReducer from './authReducer'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import './styles/flexboxindex.min.css';\r\nimport './styles/flexboxgrid.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}